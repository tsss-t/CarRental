//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WFpart.AccountService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car_Account", Namespace="http://schemas.datacontract.org/2004/07/WCFpart")]
    [System.SerializableAttribute()]
    public partial class Car_Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Account_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Account_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid Account_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Account_ShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Account_TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Account_InfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Account_ID {
            get {
                return this.Account_IDField;
            }
            set {
                if ((this.Account_IDField.Equals(value) != true)) {
                    this.Account_IDField = value;
                    this.RaisePropertyChanged("Account_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Account_Price {
            get {
                return this.Account_PriceField;
            }
            set {
                if ((this.Account_PriceField.Equals(value) != true)) {
                    this.Account_PriceField = value;
                    this.RaisePropertyChanged("Account_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Account_User {
            get {
                return this.Account_UserField;
            }
            set {
                if ((this.Account_UserField.Equals(value) != true)) {
                    this.Account_UserField = value;
                    this.RaisePropertyChanged("Account_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int Account_Shop {
            get {
                return this.Account_ShopField;
            }
            set {
                if ((this.Account_ShopField.Equals(value) != true)) {
                    this.Account_ShopField = value;
                    this.RaisePropertyChanged("Account_Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime Account_Time {
            get {
                return this.Account_TimeField;
            }
            set {
                if ((this.Account_TimeField.Equals(value) != true)) {
                    this.Account_TimeField = value;
                    this.RaisePropertyChanged("Account_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Account_Info {
            get {
                return this.Account_InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.Account_InfoField, value) != true)) {
                    this.Account_InfoField = value;
                    this.RaisePropertyChanged("Account_Info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccount")]
    public interface IAccount {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/AddAccount", ReplyAction="http://tempuri.org/IAccount/AddAccountResponse")]
        bool AddAccount(WFpart.AccountService.Car_Account Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/DeleteAccount", ReplyAction="http://tempuri.org/IAccount/DeleteAccountResponse")]
        bool DeleteAccount(int AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/UpdateAccount", ReplyAction="http://tempuri.org/IAccount/UpdateAccountResponse")]
        bool UpdateAccount(WFpart.AccountService.Car_Account TempAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/SelectAccount_ID", ReplyAction="http://tempuri.org/IAccount/SelectAccount_IDResponse")]
        WFpart.AccountService.Car_Account SelectAccount_ID(int AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/SelectAllAccounts", ReplyAction="http://tempuri.org/IAccount/SelectAllAccountsResponse")]
        WFpart.AccountService.Car_Account[] SelectAllAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/SelectAccountDIY_Func", ReplyAction="http://tempuri.org/IAccount/SelectAccountDIY_FuncResponse")]
        WFpart.AccountService.Car_Account[] SelectAccountDIY_Func(System.Func<WFpart.AccountService.Car_Account, bool> where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/SelectAccountDIY_Field", ReplyAction="http://tempuri.org/IAccount/SelectAccountDIY_FieldResponse")]
        WFpart.AccountService.Car_Account[] SelectAccountDIY_Field(System.Func<WFpart.AccountService.Car_Account, bool> where, System.Func<WFpart.AccountService.Car_Account, WFpart.AccountService.Car_Account> select);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountChannel : WFpart.AccountService.IAccount, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountClient : System.ServiceModel.ClientBase<WFpart.AccountService.IAccount>, WFpart.AccountService.IAccount {
        
        public AccountClient() {
        }
        
        public AccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddAccount(WFpart.AccountService.Car_Account Account) {
            return base.Channel.AddAccount(Account);
        }
        
        public bool DeleteAccount(int AccountID) {
            return base.Channel.DeleteAccount(AccountID);
        }
        
        public bool UpdateAccount(WFpart.AccountService.Car_Account TempAccount) {
            return base.Channel.UpdateAccount(TempAccount);
        }
        
        public WFpart.AccountService.Car_Account SelectAccount_ID(int AccountID) {
            return base.Channel.SelectAccount_ID(AccountID);
        }
        
        public WFpart.AccountService.Car_Account[] SelectAllAccounts() {
            return base.Channel.SelectAllAccounts();
        }
        
        public WFpart.AccountService.Car_Account[] SelectAccountDIY_Func(System.Func<WFpart.AccountService.Car_Account, bool> where) {
            return base.Channel.SelectAccountDIY_Func(where);
        }
        
        public WFpart.AccountService.Car_Account[] SelectAccountDIY_Field(System.Func<WFpart.AccountService.Car_Account, bool> where, System.Func<WFpart.AccountService.Car_Account, WFpart.AccountService.Car_Account> select) {
            return base.Channel.SelectAccountDIY_Field(where, select);
        }
    }
}
